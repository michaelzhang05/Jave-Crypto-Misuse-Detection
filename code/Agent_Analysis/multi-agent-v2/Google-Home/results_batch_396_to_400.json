[
    {
        "Batch ID": 396,
        "Document ID": 0,
        "response": "Vulnerable\n1: 0.80\n2: 0.90\n3: 0.85\n4: 0.95\n5: 0.90\n6: 0.85\n7: 0.90\n8: 0.90\n9: 0.80\n10: 0.80",
        "AES_ECB_details": "Vulnerable\n```java\nCipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");\n```\n```java\nString crypto = \"AES/ECB/PKCS5Padding\";\n```\n```java\nCipher cipher = Cipher.getInstance(crypto);\n```\n```java\nString cryptoAlgo = \"AES/ECB/PKCS5Padding\";\n```\n```java\nCipher cipher = Cipher.getInstance(String.valueOf(crypto));\n```\n```java\nString crypto = \"AES/ECB/PKCS5Padding\";\n```\n```java\nCipher cipher = Cipher.getInstance(crypto);\n```",
        "No_CleanPassword_details": "Predicted based on planner confidence",
        "MD5_details": "Vulnerable\n```java\nMessageDigest md = MessageDigest.getInstance(\"MD5\");\n```\n```java\nMessageDigest md = MessageDigest.getInstance(\"MD5\");\n```\n```java\nMessageDigest md = MessageDigest.getInstance(\"MD5\");\n```\n```java\nMessageDigest md = MessageDigest.getInstance(\"MD5\");\n```",
        "SHA1_details": "Vulnerable\n```java\nMessageDigest md = MessageDigest.getInstance(\"SHA1\");\n```\n```java\nCryptoHash1 crypto = new CryptoHash1(\"SHA1\");\n```\n```java\npublic static final String DEFAULT_CRYPTO = \"SHA1\";\n```",
        "Trust_All_Certificates_details": "Vulnerable\n```java\n@Override\npublic void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\n    // Trust any remote server (no certificate validation)\n}\n```",
        "Allow_All_Hostnames_details": "Vulnerable\n```java\npublic boolean verify(String s, SSLSession sslSession) {\n    return true;\n}\n```",
        "final_predictions": "Vulnerable\n2, 4, 5, 6, 7, 8"
    },
    {
        "Batch ID": 397,
        "Document ID": 0,
        "response": "Vulnerable\n1: 0.90\n2: 0.95\n3: 0.85\n4: 0.80\n5: 0.90\n6: 0.80\n7: 0.90\n8: 0.90\n9: 0.85\n10: 0.85",
        "AES_ECB_details": "Predicted based on planner confidence",
        "MD5_details": "Not Vulnerable",
        "Trust_All_Certificates_details": "Vulnerable\n```java\npublic final class InstallerActivity extends I4.r {\n    // ...\n    private final void F1() {\n        // ...\n        if (this.f30721O == null) {\n            d8 = AbstractC3364k.d(N.a(C3347b0.b()), null, null, new j(null), 3, null);\n            this.f30721O = d8;\n        }\n    }\n    // ...\n    public final void O1(Activity activity, ArrayList files) {\n        // ...\n        if (!this.f30724R && T1(files)) {\n            h2(files);\n        } else if ((l8 || s8) && !aVar.t()) {\n            w1(files);\n        } else {\n            new Q4.h(activity, this.f30722P).v(files, this.f30727U);\n        }\n    }\n    // ...\n}\n```",
        "Allow_All_Hostnames_details": "Vulnerable\n```java\npublic boolean verify(String s, SSLSession sslSession) {\n    return true;\n}\n```",
        "final_predictions": "Vulnerable\n2, 7, 8"
    },
    {
        "Batch ID": 398,
        "Document ID": 0,
        "response": "None Vulnerability Found",
        "final_predictions": "None Vulnerability Found"
    },
    {
        "Batch ID": 398,
        "Document ID": 1,
        "response": "None Vulnerability Found",
        "final_predictions": "None Vulnerability Found"
    },
    {
        "Batch ID": 398,
        "Document ID": 2,
        "response": "None Vulnerability Found",
        "final_predictions": "None Vulnerability Found"
    },
    {
        "Batch ID": 399,
        "Document ID": 0,
        "response": "None Vulnerability Found",
        "final_predictions": "None Vulnerability Found"
    }
]