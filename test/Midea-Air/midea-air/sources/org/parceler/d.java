package org.parceler;

import android.os.Parcelable;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import org.parceler.NonParcelRepository;

/* compiled from: Parcels.java */
/* loaded from: classes2.dex */
public final class d {
    private static final b a;

    /* JADX INFO: Access modifiers changed from: private */
    /* compiled from: Parcels.java */
    /* loaded from: classes2.dex */
    public static final class b {
        private ConcurrentMap<Class, c> a;

        private b() {
            this.a = new ConcurrentHashMap();
        }

        private static String a(Class cls) {
            return cls.getName() + "$$Parcelable";
        }

        public c b(Class cls, ClassLoader classLoader) {
            try {
                return new C0386d(cls, classLoader.loadClass(a(cls)));
            } catch (ClassNotFoundException unused) {
                return null;
            }
        }

        public c c(Class cls) {
            c cVar = this.a.get(cls);
            if (cVar != null) {
                return cVar;
            }
            c b2 = b(cls, cls.getClassLoader());
            if (Parcelable.class.isAssignableFrom(cls)) {
                b2 = new NonParcelRepository.t();
            }
            if (b2 != null) {
                c putIfAbsent = this.a.putIfAbsent(cls, b2);
                return putIfAbsent == null ? b2 : putIfAbsent;
            }
            throw new ParcelerRuntimeException("Unable to find generated Parcelable class for " + cls.getName() + ", verify that your class is configured properly and that the Parcelable class " + a(cls) + " is generated by Parceler.");
        }

        public void d(e<c> eVar) {
            this.a.putAll(eVar.get());
        }
    }

    /* compiled from: Parcels.java */
    /* loaded from: classes2.dex */
    public interface c<T> {
        Parcelable a(T t);
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* compiled from: Parcels.java */
    /* renamed from: org.parceler.d$d, reason: collision with other inner class name */
    /* loaded from: classes2.dex */
    public static final class C0386d<T> implements c<T> {
        private final Constructor<? extends Parcelable> a;

        /* JADX WARN: Multi-variable type inference failed */
        public C0386d(Class<T> cls, Class<? extends Parcelable> cls2) {
            try {
                this.a = cls2.getConstructor(cls);
            } catch (NoSuchMethodException e2) {
                throw new ParcelerRuntimeException("Unable to create ParcelFactory Type", e2);
            }
        }

        @Override // org.parceler.d.c
        public Parcelable a(T t) {
            try {
                return this.a.newInstance(t);
            } catch (IllegalAccessException e2) {
                throw new ParcelerRuntimeException("Unable to create ParcelFactory Type", e2);
            } catch (InstantiationException e3) {
                throw new ParcelerRuntimeException("Unable to create ParcelFactory Type", e3);
            } catch (InvocationTargetException e4) {
                throw new ParcelerRuntimeException("Unable to create ParcelFactory Type", e4);
            }
        }
    }

    static {
        b bVar = new b();
        a = bVar;
        bVar.d(NonParcelRepository.a());
    }

    public static <T> T a(Parcelable parcelable) {
        if (parcelable == null) {
            return null;
        }
        return (T) ((org.parceler.c) parcelable).getParcel();
    }

    public static <T> Parcelable b(Class<? extends T> cls, T t) {
        if (t == null) {
            return null;
        }
        return a.c(cls).a(t);
    }

    public static <T> Parcelable c(T t) {
        if (t == null) {
            return null;
        }
        return b(t.getClass(), t);
    }
}
